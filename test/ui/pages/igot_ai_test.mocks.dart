// Mocks generated by Mockito 5.4.5 from annotations
// in karmayogi_mobile/test/ui/pages/igot_ai_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:karmayogi_mobile/respositories/_respositories/igot_ai_repository.dart'
    as _i3;
import 'package:karmayogi_mobile/services/index.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIgotAIService_0 extends _i1.SmartFake implements _i2.IgotAIService {
  _FakeIgotAIService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IgotAIRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIgotAIRepository extends _i1.Mock implements _i3.IgotAIRepository {
  MockIgotAIRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IgotAIService get igotAIService => (super.noSuchMethod(
        Invocation.getter(#igotAIService),
        returnValue: _FakeIgotAIService_0(
          this,
          Invocation.getter(#igotAIService),
        ),
      ) as _i2.IgotAIService);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<String> generateRecommendation() => (super.noSuchMethod(
        Invocation.method(
          #generateRecommendation,
          [],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #generateRecommendation,
            [],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<Map<String, dynamic>> getAIRecommentationWithFeedbackDoId(
          {required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAIRecommentationWithFeedbackDoId,
          [],
          {#id: id},
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<String> saveFeedback({
    required String? courseId,
    required String? recommendationId,
    required int? rating,
    String? feedback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFeedback,
          [],
          {
            #courseId: courseId,
            #recommendationId: recommendationId,
            #rating: rating,
            #feedback: feedback,
          },
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #saveFeedback,
            [],
            {
              #courseId: courseId,
              #recommendationId: recommendationId,
              #rating: rating,
              #feedback: feedback,
            },
          ),
        )),
      ) as _i4.Future<String>);

  @override
  List<String> filterDoIds(List<dynamic>? list) => (super.noSuchMethod(
        Invocation.method(
          #filterDoIds,
          [list],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> filterReleventDoIds(
    List<dynamic>? list,
    int? rating,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterReleventDoIds,
          [
            list,
            rating,
          ],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
